openapi: 3.0.0
info:
  title: login.v1
  version: '1.0'
servers:
  - url: 'http://localhost:8081'
paths:
  '/messages/{destinataryid}':
    post:
      summary: Create New User
      operationId: messaging.send_message
      description: Creates a new message for the given userid.
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  minLength: 1
                  maxLength: 255
              required:
                - message
    parameters:
      - schema:
          type: string
        name: destinataryid
        in: path
        required: true
  /messages:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        message:
                          type: string
                        sender_id:
                          type: string
                        timestamp:
                          type: integer
                      required:
                        - message
                        - sender_id
                        - timestamp
        '400':
          description: Bad Request
      operationId: messaging.get_messages
      description: 'Reads all messages received, even the sent by us.'
    parameters: []
components:
  schemas:
    User:
      title: User
      type: object
      description: ''
      x-examples:
        Alice Smith:
          id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        dateOfBirth:
          type: string
          format: date
          example: '1997-10-31'
        emailVerified:
          type: boolean
          description: Set to true if the user's email has been verified.
        createDate:
          type: string
          format: date
          description: The date that the user was created.
      required:
        - id
        - firstName
        - lastName
        - email
        - emailVerified
  securitySchemes:
    jwt:
      type: http
      scheme: bearer
      description: ''
      bearerFormat: JWT
      x-bearerInfoFunc: messaging.check_token
security:
  - jwt: []
